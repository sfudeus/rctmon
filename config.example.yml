---
################################################################################
# Example configuration. This configuration contains all the keys and their
# respective  defaults (if any).

# Section for connecting to the RCT device
device:
  # IP or host name
  host: 127.0.0.1
  # Network port
  port: 8899

# Monitoring the program
prometheus:
  # Enables the prometheus endpoint for monitoring.
  enable: true
  # Enables exposing the readings from the device via prometheus
  exposition: false
  # Port to which to bind on the bind-address
  bind_port: 9831
  # Address to which to bind
  bind_address: 127.0.0.1

# Settings for InfluxDB 1.8 or 2.x
influxdb:
  # Enables writing to InfluxDB
  enable: false
  # API endpoint where InfluxDB is listening
  url: http://localhost:8086
  # Auth token. For InfluxDB 1.8 use the format 'username:password'.
  token: your-token
  # Organization, InfluxDB 1.8 ignores this value
  org: rct
  # Bucket name, InfluxDB 1.8 uses this as database name
  bucket: rct-inverter

mqtt:
  # Enables writing to MQTT
  enable: false
  # Hostname of the MQTT broker to write to
  mqtt_host: localhost
  # The interval in which to update MQTT
  flush_interval_seconds: 30
  # over write topic prefix
  # topic_prefix: rctmon/rct01/
  # user and password to authenticat 
  auth_user: test
  auth_pass: "*********"
  # enable TLS/SSL encryption, most likely `mqtt_port` need to be set
  tls_enable: false
  # the mqtt library is very strict in checking TLS certificates.
  # if you use self-signed certificates, you need to export it and 
  # give the path here.
  tls_ca_cert: ./env/ca.pem
  # Give path to client certificate and key here for authentication. 
  # tls_certfile: ./env/cert.pem
  # tls_keyfile: ./env/key.pem




# Configuration for the logging behaviour of the application. It can be left
# out entirely for most use-cases, the following shows the internal defaults
# will be used then. If set, it is handed to "logging.config.dictConfig".
# For more details, see:
# https://docs.python.org/3/library/logging.config.html#logging-config-dictschema
logging:
  # mandatory, always 1
  version: 1

  # log format specifications
  formatters:
    simple:
      format: '%(asctime)s - %(name)s - %(levelname)s - %(message)s'

  handlers:
    # output to standard output
    console:
      class: logging.StreamHandler
      formatter: simple
      level: INFO
      stream: ext://sys.stdout

  # root-logger config, can be refined in "loggers:" section. It defines the
  # default for all loggers
  root:
    level: INFO
    handlers: [console]

  # loggers:
  #   rctmon.daemon:
  #     handlers: [console]
